# Global values
ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
ENV["MATCH_PASSWORD"] = ENV["KEYCHAIN_PASSWORD"]

default_platform(:ios)

platform :ios do
  
  lane :build_ipa do
  # add actions here: https://docs.fastlane.tools/actions
    setup_ci(provider: "travis")
    
    import_certificate_and_provisioning_profile
    
    build_app(
      clean: true,
      silent: true,
      cloned_source_packages_path: "SourcePackages",
      export_method: "app-store"
    )
  end
  
  desc "import certificate and provisioning profile" 
  private_lane :import_certificate_and_provisioning_profile do
    
    api_key = app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY_CONTENT_BASE64"],
      is_key_content_base64: true,
      in_house: false
    )
    
    match(
      api_key: api_key,
      username: ENV["ITUNES_CONNECT_ACCOUNT"],
      app_identifier: "com.kobashou06.odai",
      type: "appstore",
      readonly: is_ci
    )
    
  end
  
  desc "Description of what the lane does"
  lane :upload_testflight do
    build_ipa
    upload_to_testflight(
        username: ENV["USERNAME"]
        )
  end
  
  desc "Bump minor version"
  lane :bump_minor do
    increment_version_number(bump_type: "minor")
    increment_build_number
    commit
  end

  def commit
    version_number = get_version_number target: 'odai'
    build_number = get_build_number
    branch_name = "#{version_number}"
    message = "ci: bump version v#{version_number} (#{build_number})"

    sh "git checkout -b 'release/v#{branch_name}'"
    sh "git commit -a -m '#{message}'"
    sh 'git push origin HEAD'
  end
  
  def tag
    version_number = get_version_number target: 'odai'
    add_git_tag(tag: "v#{version_number}")
    sh 'git push --tags'
  end
  
  
end
